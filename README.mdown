# About

This repository was originally for my 'svnstash' tool. Over time, however, I started adding other tools into the same repository to reuse some of the code, so now I think of these as 'svntools'.

## svnstash

Stash the changes in an svn working copy away for later - based on git's stash command.

## svneligible

This tool is basically to just save on typing, and having to remember the arcane `svn mergeinfo --show-revs eligible <path> | xargs -I{} svn log -{}` stupidity. It shows what revisions are eligible to merge from a branch or tag, with commands to list the repositories branches and tags.

Note: This tool assumes you have roughly the same repository layout as me:

```
branches/username/feature1
branches/username/feature2
releases/release-0.1.1
releases/release-0.1.2
releases/release-0.2.0
tags/release-0.1.1
tags/release-0.1.2
```

# Requirements

This was developed on Mac OS X, and aims to only require built-in tools. It should run fine on Linux, too. Windows users may need to install some additional tools.

* Subversion
* PHP5
* diff / patch binaries on your PATH.

# Known Issues

Binary files are *not* supported nor detected at present. If you attempt to stash changes to a binary file, or stash an untracked binary, you *will* lose its contents.

# Usage

Personally, I just create a symlink named `svnstash` somewhere on my path, pointed to svnstash.php. Assuming you got the code from Github, the main entrypoint should already marked as executable.

Running `svnstash --help` or `svneligible --help` will give a manpage-like help sheet explaining the parameters you can use.

# Contributing

If you feel you could add something to svnstash, please do. Patches welcome! Fork on Github and send me a pull request.

# Q&A about svnstash

## Why not just use git-svn?

Because it doesn't support Subversion's mergeinfo, which is vital at work for tracking branches, releases, hotfixes, etc.

## Why doesn't it support &lt;x&gt;?

Unless &lt;x&gt; is "binary files", then it's probably because I've not thought of it. Why not file an issue on the Github tracker?

If it's binary file support you're after, I'm afraid that's not a high priority for me. Binary files aren't handled very well by Subversion anyway, so I'm at a bit of a loss for a good way to handle them. If you have any bright ideas, please drop me a line.

## Who made this?

I'm Mat "Drarok" Gadd. You can find me on [Twitter][twitter], here on [Github][github], [Bitbucket][bitbucket], [StackOverflow][stackoverflow], and probably elsewhere I've not thought of. Drop by and say hi if you find any of my stuff useful.

[twitter]: http://twitter.com/Drarok
[github]: http://github.com/Drarok
[bitbucket]: http://bitbucket.org/drarok
[stackoverflow]: http://stackoverflow.com/users/86093/drarok